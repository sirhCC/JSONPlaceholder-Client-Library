name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    name: Build & Test (Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [16, 18, 20]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
            node-version: ${{ matrix.node }}
            cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint || npm run lint:check

      - name: Build
        run: npm run build

      - name: Unit Tests (root)
        run: |
          if [ "${{ matrix.node }}" = "20" ]; then
            npm run test:coverage -- --maxWorkers=50%
          else
            npm test -- --maxWorkers=50%
          fi

      - name: React Package Tests
        run: |
          cd packages/react
          npm test -- --maxWorkers=50%

      - name: Integration Validation
        run: |
          npm run test:integration
          npm run test:validate || echo "Validation script optional"

      - name: Archive Coverage (if present)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-node-${{ matrix.node }}
          path: |
            coverage
          if-no-files-found: ignore

  release:
    name: Release
    needs: build-test
    runs-on: ubuntu-latest
    if: >-
      github.ref == 'refs/heads/main' &&
      github.event_name == 'push'
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Run Tests (sanity)
        run: npm test -- --maxWorkers=50%

      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

  # Optional: separate job for Windows smoke test to catch path issues
  windows-smoke:
    name: Windows Smoke
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install
        run: npm ci
      - name: Build
        run: npm run build
      - name: Root Tests (subset)
  run: npx jest src/__tests__/client.test.ts --maxWorkers=50%
